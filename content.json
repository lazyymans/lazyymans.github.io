[{"title":"Servlet 生命周期","date":"2018-05-03T06:00:33.000Z","path":"2018/05/03/Servlet源码分析/","text":"一个Servlrt 的生命周期可以被定义为从创建到销毁的整个过程。以下是Servlrt 所遵循的路径 Servlrt 的生命周期分为三个阶段： 1、初始化阶段1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950类加载器加载Servlet --&gt; 容器创建Servlet --&gt; 容器调用Servlet.init()Servlet.init()只会被调用一次，它只在Servlet 创建的时候调用，之后的任何用户请求都不会在被调用。默认情况下Servlet 是什么时候被创建的呢? 我们在web.xml 里面配置我们的Servlet 代码如下 &lt;servlet&gt; &lt;!-- servlet的内部名称，自定义。尽量有意义 --&gt; &lt;servlet-name&gt;defaultServlet&lt;/servlet-name&gt; &lt;!-- servlet的类全名： 包名+简单类名 --&gt; &lt;servlet-class&gt;com.blog.demo.servlet.DefaultServlet&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;!-- servlet的映射配置 --&gt; &lt;servlet-mapping&gt; &lt;!-- servlet的内部名称，一定要和上面的内部名称保持一致！！ --&gt; &lt;servlet-name&gt;defaultServlet&lt;/servlet-name&gt; &lt;!-- servlet的映射路径（访问servlet的名称） --&gt; &lt;url-pattern&gt;/servlet&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; Servlet public class DefaultServlet extends HttpServlet &#123; @Override public void init() throws ServletException &#123; System.out.println(\"DefaultServlet init\"); super.init(); &#125; @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123; System.out.println(\"DefaultServlet doGet\"); super.doGet(req, resp); &#125; @Override protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123; System.out.println(\"DefaultServlet doPost\"); super.doPost(req, resp); &#125;&#125;此时我们启动我们的容器，这里以tomcat容器为例，启动我们的tomcat 查看启动日志，我们并没有发现控制台有打印 DefaultServlet init，这是我们访问一下我们的Servlet doGet方法我们发现打印了两行日志DefaultServlet initDefaultServlet doGet即Servlet 在我们访问的时候被创建，并且初始化，之后再次调用不再调用Servlet.init()方法。第一次调用Servlet.doGet()的方法时，tomcat 会判断容器中是否有这个Servlet 的实例，如果有则直接调用Servlet.doGet()，如果没有则创建Servlet 并调用 init 方法。日志如下图： 2、相应客户端请求阶段3、销毁阶段","tags":[]},{"title":"博客搭建","date":"2018-03-27T03:15:00.000Z","path":"2018/03/27/博客快速搭建/","text":"快速搭建参看网址搭建 参看网址多机使用 Create a new post and commit1234567cd 你的博客目录$ hexo new \"My New Post\" // /你的博客目录/source/_posts/My New Post.mdgit commit -am 'add My New Post.md and commit'git pushhexo clean // 先进行cleanhexo d -g // 更新到master分支","tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://blog.pcluo.com/tags/博客搭建/"}]}]